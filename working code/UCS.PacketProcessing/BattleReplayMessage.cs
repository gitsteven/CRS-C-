using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;

namespace UCS.PacketProcessing
{
	internal class BattleReplayMessage : Message
	{
		[CompilerGenerated]
		[Serializable]
		private sealed class BattleReplayMessageIntel
        {
			public static readonly BattleReplayMessage.BattleReplayMessageIntel ins = new BattleReplayMessage.BattleReplayMessageIntel();

			public static Func<int, bool> func;

			internal bool StringToByteArray(int x)
			{
				return x % 2 == 0;
			}
		}

		private static string hex

		public BattleReplayMessage(Client client) : base(client)
		{
			base.SetMessageType(24114);
		}

		public override void Encode()
		{
			base.Encrypt(BattleReplayMessage.StringToByteArray(BattleReplayMessage.hex));
		}

		public static byte[] StringToByteArray(string hex)
		{
			IEnumerable<int> arg_3D_0 = Enumerable.Range(0, hex.Length);
            Func<int, bool> arg_3D_1 = null;
			if (arg_3D_1 == null)
			{
                arg_3D_1 = BattleReplayMessageIntel.ins.StringToByteArray;

            }
			return (from x in arg_3D_0.Where(arg_3D_1)
			select Convert.ToByte(hex.Substring(x, 2), 16)).ToArray<byte>();
		}
	}
}
